module.exports = {
	env: {
		es6: true,
		node: true,
		jest: true,
	},
	extends: ["eslint:recommended", "plugin:jest/recommended", "plugin:jest-formatting/strict"],
	plugins: ["jest", "eslint-plugin-jest-formatting"],
	globals: {
		Atomics: "readonly",
		SharedArrayBuffer: "readonly",
	},
	parserOptions: {
		ecmaVersion: 2018,
	},
	rules: {
		"jest/consistent-test-it": ["error", { fn: "it" }],
		"jest/expect-expect": "error",
		"jest/no-duplicate-hooks": "error",
		"jest/no-empty-title": "error",
		"jest/no-export": "error",
		"jest/no-if": "error",
		"jest/no-standalone-expect": "error",
		"jest/no-test-return-statement": "error",
		"jest/no-try-expect": "error",
		"jest/prefer-to-be-null": "error",
		"jest/prefer-to-be-undefined": "error",
		"jest/prefer-to-contain": "error",
		"jest/prefer-to-have-length": "error",
		"jest/require-top-level-describe": "error",
		"jest/require-tothrow-message": "error",
		"jest/valid-describe": "error",
		"jest/valid-expect": "error",

		"no-console": "off",
		"array-bracket-spacing": "error",
		"template-curly-spacing": ["error", "never"],
		"key-spacing": ["error", { afterColon: true, beforeColon: false }],
		"keyword-spacing":	[
			"error", { before: true },
		],
		"space-before-blocks":	[
			"error", { functions: "always", keywords: "always" },
		],
		"no-trailing-spaces": "error",

		curly: "error",

		"no-new-object": "error",
		"no-multi-str": "error",
		"no-new": "error",
		"prefer-destructuring": ["error", {
			array: false,
			object: true,
		}, {
			enforceForRenamedProperties: false,
		}],

		"no-param-reassign": "error",
		"no-new-func": "error",
		"no-new-wrappers": "error",
		"no-octal": "error",
		eqeqeq: "error",

		"newline-per-chained-call": "error",
		"prefer-arrow-callback": [
			"error",
			{ allowNamedFunctions: true },
		],

		"padded-blocks": ["error", "never"],
		"prefer-rest-params": "error",

		"arrow-parens": "error",
		"arrow-body-style": ["error", "always"],
		"no-restricted-globals": "error",

		"no-new-func": "error",
		"space-in-parens": "error",
		"object-curly-spacing": ["error", "always"],
		"no-loop-func": "error",
		"no-plusplus": ["error", { allowForLoopAfterthoughts: true }],
		"operator-linebreak": "error",
		"no-multi-assign": "error",
		"prefer-const": "error",
		"no-array-constructor": "error",
		"block-spacing": "error",
		"dot-notation": "error",
		"no-confusing-arrow": "error",
		"no-whitespace-before-property": "error",
		"no-extend-native": "error",
		"no-nested-ternary": "error",
		"no-unneeded-ternary": "error",
		"computed-property-spacing": "error",
		"func-call-spacing": "error",
		"dot-location": ["error", "property"],
		"no-mixed-operators": "error",
		"no-fallthrough": "error",
		"prefer-object-spread": "error",
		"default-case": "error",
		"no-global-assign": "error",
		"no-empty-function": "error",

		"no-empty-pattern": "error",
		"no-floating-decimal": "error",
		camelcase: "error",
		"spaced-comment": "error",
		"space-before-function-paren": ["error", "never"],
		"no-multi-spaces": ["error"],

		"no-sequences": "error",
		"no-path-concat": "error",
		"no-new-require": "error",
		"no-caller": "error",
		"no-undef-init": "error",
		"no-iterator": "error",
		"no-self-compare": "error",
		"no-self-assign": "error",
		"no-useless-concat": "error",
		"no-case-declarations": "error",
		"no-implied-eval": "error",
		"no-implicit-coercion": "error",

		"brace-style": "error",
		"no-return-assign": "error",
		"no-else-return": "error",
		"no-useless-return": "error",

		"no-unmodified-loop-condition": "error",
		yoda: ["error", "never", { exceptRange: true }],
		"no-var": "error",
		"one-var": ["error", "never"],
		"quote-props": ["error", "as-needed", {
			unnecessary: true,
		}],
		radix: ["error", "as-needed"],
		"comma-style": "error",
		"comma-dangle": ["error", "always-multiline"],
		"comma-spacing": [1, {
			before: false,
			after: true,
		}],
		indent: [
			"error",
			"tab",
			{ SwitchCase: 1 },
		],
		"switch-colon-spacing": "error",

		"semi-spacing": ["error", { before: false, after: true }],
		semi: [
			"error",
			"always",
		],
		"no-lonely-if": "error",
		"lines-between-class-members": ["error", "always"],
		"no-multiple-empty-lines": ["error", { max: 1, maxEOF: 1 }],
		"space-infix-ops": ["error", { int32Hint: false }],
		"max-statements-per-line": ["error", { max: 1 }],
		"id-length": ["error", { min: 1, max: 40, exceptions: ["i"] }],
		"eol-last": "error",
	},
};
